/*
给定一个只包含正整数的非空数组。是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。

注意:

每个数组中的元素不会超过 100
数组的大小不会超过 200
示例 1:

输入: [1, 5, 11, 5]

输出: true

解释: 数组可以分割成 [1, 5, 5] 和 [11].
 

示例 2:

输入: [1, 2, 3, 5]

输出: false

解释: 数组不能分割成两个元素和相等的子集.
*/

//动态规划
using System;
using System.Diagnostics;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public static void Main ( string[] args ) {
    }
    public bool CanPartition ( int[] nums ) {
        int sum = 0;
        for ( int i = 0 ;i < nums.Length ;i++ ) {
            sum += nums[i];
        }
        if ( sum % 2 != 0 ) {
            return false;
        }

        int n = nums.Length;
        int c = sum/2;
        bool[] memo = Enumerable.Repeat(false,c+1).ToArray();

        for ( int i = 0 ;i <= c ;i++ ) {
            memo[i] = ( nums[0] == i );
        }
        for ( int i = 1 ;i < n ;i++ ) {
            for ( int j = c ;j >= nums[i] ;j-- ) {
                memo[j] = memo[j] || memo[j - nums[i]];
            }
        }
        return memo[c];
    }

}












