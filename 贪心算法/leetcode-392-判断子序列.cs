/*
给定字符串 s 和 t ，判断 s 是否为 t 的子序列。

你可以认为 s 和 t 中仅包含英文小写字母。字符串 t 可能会很长（长度 ~= 500,000），而 s 是个短字符串（长度 <=100）。

字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。
（例如，"ace"是"abcde"的一个子序列，而"aec"不是）。

示例 1:
s = "abc", t = "ahbgdc"

返回 true.

示例 2:
s = "axc", t = "ahbgdc"

返回 false.

后续挑战 :

如果有大量输入的 S，称作S1, S2, ... , Sk 其中 k >= 10亿，你需要依次检查它们是否为 T 的子序列。在这种情况下，你会怎样改变代码？
*/

//贪心算法
using System;
using System.Diagnostics;
using System.Linq;
using System.Collections.Generic;

public class Solution {
    public static void Main ( string[] args ) {
        Console.WriteLine ( IsSubsequence ( "abc","abhcgd" ) );
    }
    public static bool IsSubsequence ( string s,string t ) {
        int si = 0;
        int ti = 0;
        int count = 0;
        while ( si < s.Length && ti < t.Length ) {
            if ( s[si] == t[ti] ) {
                si++;
                ti++;
                count++;
            }
            else {
                ti++;
            }
        }
        if ( count == s.Length ) {
            return true;
        }
        return false;
    }
}












